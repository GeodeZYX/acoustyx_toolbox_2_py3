#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Jul 31 09:16:50 2018

@author: psakicki
"""

from megalib import *

genepath = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/1807_Article_GNSSA_ObsAnex/mk3_autentik_dekal_zonal_REBOOT1807_noise-dZ_stresstest"
exprefix = "BATCH_RC_mk3"

#from matplotlib import rc
#rc('text', usetex=True)

expdiclis4plot_all = []

for path in sorted(glob.glob(genepath + '/' + exprefix + "*" )):
    
    if not os.path.isdir(path):
        continue
    
    exp_name = os.path.basename(path)
    
    expdiclis4plot = glob.glob(path + '/*exp')

    expdiclis4plot_all = expdiclis4plot_all + expdiclis4plot


val_noise_x_STK     = []
val_ecart_y_STK     = []
dz_cst_bool_STK     = []
name_STK            = []
name_simplified_STK = []

row_STK = []

for expdic_path in expdiclis4plot_all:
    expdic     = genefun.pickle_loader(expdic_path)
    
    val_noise_x     = expdic[-1]['bruit dZ']
    val_ecart_y     = expdic[-1]['ecart 2D bary brut/vrai en distance']
    dz_cst_bool     = expdic[-1]['with_dzcst']
    name            = expdic[-1]['nom']
    name_simplified = expdic[-1]['nom'].split("_")[6]
    if name_simplified == "x2000":
        name_simplified = expdic[-1]['nom'].split("_")[5]
    
    val_noise_x_STK.append(val_noise_x)
    val_ecart_y_STK.append(val_ecart_y)
    dz_cst_bool_STK.append(dz_cst_bool)
    name_STK.append(name)
    name_simplified_STK.append(name_simplified)
    
    row_STK.append([val_noise_x , val_ecart_y , dz_cst_bool , name_simplified])
    
    
    
DF = pd.DataFrame(row_STK,columns=['x'     ,
'y'     ,
'dz_cst_bool'     ,
'name' ])
    

    
fig , ax = plt.subplots()

dz_cst_uniq = list(DF["dz_cst_bool"].unique())
name_uniq   = sorted(list(DF["name"].unique()))
sym_list = ["^","v","<",">"]

from matplotlib.colors import LinearSegmentedColormap

colorsList_orange = ["xkcd:dark orange","xkcd:dark yellow"]
cm_orange = LinearSegmentedColormap.from_list("perso_orange", colorsList_orange, N=1000)
colorsList_blue   = ["xkcd:dark blue","xkcd:light blue"]
cm_blue   = LinearSegmentedColormap.from_list("perso_blue", colorsList_blue, N=1000)
NUM_COLORS = 4
color_list_orange = [cm_orange(1.*i/NUM_COLORS) for i in range(NUM_COLORS)]
color_list_blue   = [cm_blue(1.*i/NUM_COLORS) for i in range(NUM_COLORS)]



ax.set_yscale('log')
ax.set_xscale('log')
fig.set_size_inches(6,8)

import matplotlib.lines as mlines
lgd_handler_list1 = []
lgd_handler_list2 = []

i = 0
for dz_cst_iter , name_iter in itertools.product(dz_cst_uniq , name_uniq):
    i += 1
    print(i)
    DFplot = DF[(DF["dz_cst_bool"] == dz_cst_iter) & (DF["name"] == name_iter)]
    
    sym = sym_list[name_uniq.index(name_iter)]
    if dz_cst_iter:
        color_list = color_list_orange
        dZ_lgd_nam = "δz fixed"
    else:
        color_list = color_list_blue
        dZ_lgd_nam = "δz as obs."
        
    col = color_list[name_uniq.index(name_iter)]
    
    handler = mlines.Line2D([], [], color= col, marker=sym, linestyle='-',
                          markersize=2, label=dZ_lgd_nam + ", " + name_iter)
    if dz_cst_iter:    
        lgd_handler_list1.append(handler)
    else:
        lgd_handler_list2.append(handler)
    
    X,Y = genefun.sort_binom_list(DFplot["x"],DFplot["y"])

    ax.plot(X,Y,"-" + sym,c=col)


ax.set_xlabel(r"Uncertainty on depth differences (m, log. scale)")
ax.set_ylabel("2D distance difference to the true barycenter $E_{G, 2D}$ (m, log. scale)")
legend1 = ax.legend(handles=lgd_handler_list1,ncol=1,loc="upper left")
legend2 = ax.legend(handles=lgd_handler_list2,ncol=1,loc="lower right")

ax.add_artist(legend1)
plt.tight_layout()

outdir = "/home/psakicki/GFZ_WORK/RENDU/1802_Article_LSQ_Simu_GNSSA/FIG/depth_diff_precis"
gf.figure_saver(fig,outdir,"depth_diff_precis",(".svg",".pdf",".png"))
