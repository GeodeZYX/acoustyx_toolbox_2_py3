# -*- coding: utf-8 -*-
"""
Created on Mon Sep 12 16:49:39 2016

@author: psakicki
"""

from megalib import *

genepath = '/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/BENCHMARKING_INTIAL/integralite_des_FINALb_avec_3modes/'
genepath = '/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/BENCHMARKING_INTIAL/integralite_des_FINALb_avec_juste_2modes'

mode1Estk , mode2Estk = [] , []

mode1 = np.array([0,1,1,0,1])
mode2 = np.array([0,1,1,1,0])
mode1 = np.array([1,1,1,1,0])
mode2 = np.array([1,0,1,1,0])
    

if 0: # les 2 exp a comparer sont dans le mÃªme dossier
    for path in sorted(glob.glob(genepath + '/*')):
        
        expdiclis = glob.glob(path + '/*exp')
        expdiclis = [gf.pickle_loader(e) for e in expdiclis]
        expdiclis = [e[-1] for e in expdiclis]

        mode1ok = False
        mode2ok = False
        
        mode1exp = None
        mode2exp = None
        
        for e in expdiclis: 
            
            boolstk = []
            
            for varparam in ['with_monoZ' , 'with_barycenter' ,
                             'with_BL'    , 'with_dzcst', 'with_zmaster']:
                                 
                boolstk.append(bool(e[varparam]))
                
            if np.all(np.array(boolstk) == mode1):
                mode1ok = True
                mode1exp = e
            
            if np.all(np.array(boolstk) == mode2):
                mode2ok = True   
                mode2exp = e
                
        if mode1ok and mode2ok:
            mode1Estk.append(mode1exp['ecart 2D bary brut/vrai en distance'])
            mode2Estk.append(mode2exp['ecart 2D bary brut/vrai en distance'])

genepath1 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_3_avec_dz_cst_et_monoZ/VariTempor/zonal1045"
genepath2 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_good_traingle/VariTempor/zonal1045"

genepath1 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_good_traingle/VariTempor/zonal1056/"
genepath2 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_3_avec_dz_cst_et_monoZ/VariTempor/zonal1056/"

genepath1 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_good_traingle/VariTempor/zonal1056/"
genepath2 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_3_avec_dz_cst_et_monoZ/VariTempor/zonal1056/"

genepath2 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_3_avec_dz_cst_et_monoZ/VariTempor/traj-perturbed_incomplet"
genepath1 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_good_traingle/VariTempor/traj-perturbed"


genepath1 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_3_avec_dz_cst_et_monoZ/VariTempor/ss-bruit-surface/"
genepath2 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_good_traingle/VariTempor/ss-bruit-surface/"

genepath1 = '/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_3_avec_dz_cst_et_monoZ/VariTempor/zonal1056/'
genepath2 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_4_dz_csts_monoZ_sans_estim_barydirect/zonal1056/"
mode1 = np.array([1,1,1,1,0])
mode2 = np.array([1,0,1,1,0])

#genepath1 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_good_traingle/VariTempor/zonal1056/"
#genepath2 = "/home/psakicki/THESE/RENDU/1609_SIMU_FINAL/FINALb_4_dz_csts_monoZ_sans_estim_barydirect/zonal1056/"
#mode1 = np.array([0,1,1,0,1])
#mode2 = np.array([1,0,1,1,0])


if 1:
    explis1 = sorted(glob.glob(genepath1 + '/FINA*'))
    explis2 = sorted(glob.glob(genepath2 + '/FINA*'))
    
    expset1 = set([os.path.basename(e) for e in explis1 ])
    expset2 = set([os.path.basename(e) for e in explis2 ])
    
    
    explis = expset1.intersection(expset2)
    
    for exp in explis :
        
        path1 = [e for e in explis1 if exp in e][0]
        path2 = [e for e in explis2 if exp in e][0]
        
        expdiclis1 = glob.glob(path1 + '/*exp')
        expdiclis1 = [gf.pickle_loader(e) for e in expdiclis1]
        expdiclis1 = [e[-1] for e in expdiclis1]

        expdiclis2 = glob.glob(path2 + '/*exp')
        expdiclis2 = [gf.pickle_loader(e) for e in expdiclis2]
        expdiclis2 = [e[-1] for e in expdiclis2]
        
        expdiclis = expdiclis1 + expdiclis2

        mode1ok = False
        mode2ok = False
        
        mode1exp = None
        mode2exp = None
        
        for e in expdiclis: 
            
            boolstk = []
            
            for varparam in ['with_monoZ' , 'with_barycenter' ,
                             'with_BL'    , 'with_dzcst', 'with_zmaster']:
                                 
                boolstk.append(bool(e[varparam]))
                
            print(boolstk)
                
            if np.all(np.array(boolstk) == mode1):
                mode1ok = True
                mode1exp = e
            
            if np.all(np.array(boolstk) == mode2):
                mode2ok = True   
                mode2exp = e
            
        if mode1ok and mode2ok:
            mode1Estk.append(mode1exp['ecart 2D bary brut/vrai en distance'])
            mode2Estk.append(mode2exp['ecart 2D bary brut/vrai en distance'])
                
mode1Estk = np.array(mode1Estk)
mode2Estk = np.array(mode2Estk)

mode1Estk,mode2Estk = gf.sort_binom_list(mode1Estk,mode2Estk,1)

print(mode1 , mode2)
for lim in ( .1 , .01 , 10**-3):
    lim1 = float(np.sum(mode1Estk < lim )) / float(len(mode1Estk))
    lim2 = float(np.sum(mode2Estk < lim )) / float(len(mode2Estk))
    
    print(lim1 , lim2)
   
plt.plot(mode1Estk,"+",label= str(mode1))
plt.plot(mode2Estk,"x",label= str(mode2))
plt.legend()

ax = plt.gca()
ax.set_yscale("log")

plt.figure()

plt.plot(mode1Estk - mode2Estk)



            
    
            
        
    
    
    
    
    
    
    
