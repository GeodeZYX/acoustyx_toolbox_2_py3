#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov  9 20:51:20 2020

@author: psakicki
"""

#### Import star style
from geodezyx import *                   # Import the GeodeZYX modules
from geodezyx.externlib import *         # Import the external modules
from geodezyx.megalib.megalib import *   # Import the legacy modules names







p = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/06_static_n_center.pik"
mode = 1 

p = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/03_n_chunk_circle/03_n.pik"
mode = 2

p = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/05_f_day12_cw_acw_3/05_f.pik"
mode = 3 

DF = utils.pickle_loader(p)
DForig = DF.copy()


###### FILTRAGE
DF = DF[DF.W_DV != 0.1]


if mode in (1,2):
    if mode == 2:
        DF = DF[DF.NAME == "RGF93_RTKLIB_GPSonly"]
    
    DFgrp = DF.groupby(["BEA","C_esti","W_DV"])
    
    
    Std_stk = []
    for igrp,grp in DFgrp:
        DFstd2 = grp.std()
        lin = list(igrp) + list(DFstd2[["N","E","D","C"]]) 
        Std_stk.append(lin)
        
    DFstd = pd.DataFrame(Std_stk)
    DFstd.columns = ["BEA","C_esti","W_DV","N","E","D","C"]
    
    DFstdout = DFstd.copy()
    
    
    DFstdout.loc[np.isinf(DFstdout.W_DV),"W_DV"]  =  False
    
    DFstdout.loc[DFstdout.W_DV == 0.001, "W_DV"]  = "Constr."
    DFstdout.loc[DFstdout.W_DV == 0.01,  "W_DV"]  = "Loose"
    
    DFstdout[["N","E","D"]] = DFstdout[["N","E","D"]] * 100
    
    DFstdout.columns = ["TP","δC","ςdv","σN (cm)","σE (cm)","σD (cm)","σC (m/s)"]
    
    DFout = DFstdout
    
        
elif mode == 3:
    DFgrp = DF.groupby(["BEA","boxin"])
    DFstk = []
    for igrp,grp in DFgrp:
        DF1 = grp[["BEA","boxin"]].drop_duplicates().reset_index(drop=True)
        DF2 = pd.DataFrame((grp[["N","E","D"]].diff() *100).reset_index(drop=True).loc[1]).T.reset_index(drop=True)
        DFstk.append(pd.concat((DF1,DF2),axis=1))
        
    DFout1 = pd.concat(DFstk)
    DFout1.loc[DFout1.boxin == "CW", "boxin"]  = "1CW"
    DFout1 = DFout1.sort_values(["BEA","boxin"],ascending=[True,True])
    DFout1.loc[DFout1.boxin == "1CW", "boxin"]  = "CW"
    DFout1.reset_index(inplace=True,drop=True)
    
    DFout1.columns = ["TP","boxin","ΔN (cm)","ΔE (cm)","ΔD (cm)"]
    
    DFout = DFout1
    

DFout.index = DFout.index + 1    

TAB = tabulate.tabulate(DFout,headers=DFout.columns,floatfmt=".2f")
TAB = TAB.replace("nan","N/A")
print(TAB)

TABlatex = tabulate.tabulate(DFout,
                             headers=DFout.columns,
                             floatfmt=".2f",
                             tablefmt="latex")


TABlatex = TABlatex.replace("nan","N/A")
TABlatex = TABlatex.replace("Δ","$\Delta$")
TABlatex = TABlatex.replace("δ","$\delta$")
TABlatex = TABlatex.replace("ς","$\\varsigma$")
TABlatex = TABlatex.replace("σ","$\sigma$")

pout = p[:-4] + "_latextable.txt"
F = open(pout,"w+")
F.write(TABlatex)
F.close()
print(TABlatex)
print(pout)