#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov  9 22:38:20 2020

@author: psakicki
"""

#### Import star style
from geodezyx import *                   # Import the GeodeZYX modules
from geodezyx.externlib import *         # Import the external modules
from geodezyx.megalib.megalib import *   # Import the legacy modules names



exp =2


if exp == 1:
    pbig1 = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/06_a_StaticAbove"
    ppattern1 = "*RGF93*7*"
    
    pbig2 = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/04_b_StaticCenter"
    ppattern2 = "*ITRF14_RTKLIB*7-1*"
    
    pbig = pbig2
    
    P1   = utils.find_recursive(pbig1, ppattern1 + ".pik")
    P2   = utils.find_recursive(pbig2, ppattern2 + ".pik")
    
    P = P1 + P2
    
elif exp == 2:
    pbig = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/05_f_day12_cw_acw_3"
    #p1pattern = "*RTKLIB*"
    ppattern = "*iXBlue*7"
    
    P   = utils.find_recursive(pbig, ppattern + ".pik")


elif exp == 3:
    pbig = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/03_g_weight_range_good_2"
    #p1pattern = "*RTKLIB*"
    ppattern = "*RGF93_RTKLIB_GPSonly*"
    ppattern = "*iXBlue*7"
    
    P   = utils.find_recursive(pbig, ppattern + ".pik")



#p1pattern = "*RTKLIB*"

#P  = utils.find_recursive(pbig, p1pattern + ".csv")

ValStk = []

ACWmode = False

for p in P:
    
    IterDict     = utils.pickle_loader(p)
    IterDictLast = IterDict[list(IterDict.keys())[-1]]
    DFbig = IterDictLast["DFbig"]
    
    BEA = DFbig.ID_BEA.unique()
    
    for bea in BEA:
        DF = DFbig[DFbig.ID_BEA == bea]

        outlier_ratio = (1 - DF["VALID"].sum() / len(DF["VALID"])) * 100.
        
        if outlier_ratio == 0. and ("StaticCenter" in pbig):
            continue

        len2 = len(DF["VALID"])
        val2 = DF["VALID"].sum()
        outlier_ratio2 = (1 - val2 / len2) * 100.
        
        print(val2,len2,outlier_ratio2)

        
        diff_t = (DF.date_rec.max() - DF.date_rec.min()).seconds / 60
    
        nam = os.path.basename(p)
    
        diff_t_rnd = np.round(diff_t,1)
        
        outlier_ratio2_rnd = np.round(outlier_ratio,2)
        
        
        print(nam,bea,diff_t_rnd,"min",
              len2,"pings",
              outlier_ratio2_rnd,"% outliers")
        
        nam2 = ""
        day  = ""
        
        if "m21ma" in nam:
            #Static
            nam2 = "slanted (AM)"
        elif "m21so" in nam:
            nam2 = "slanted (PM)"
        elif "m22so" in nam:
            ##### day 2 soir is exculded
            nam2 = "toto"
            continue
        elif "mALL" in nam:
            ACWmode = True
            nam2 = "3CW+ACW"
        elif "mACW" in nam:
            nam2 = "2ACW" 
        elif "mCW" in nam:
            nam2 = "1CW" 
        elif "_v5" in nam:
            nam2 = "above"
            
        if "day1" in nam:
            day = 1   
        elif "day2" in nam:
            day = 2
        
        Val = [bea,nam2,day,diff_t_rnd,len2,outlier_ratio2_rnd]
        ValStk.append(Val)
         
DFout = pd.DataFrame(ValStk)

DFout.columns = ["TP","mode","day","length (min)","pings (#)", "outliers (%)"]

DFout = DFout.sort_values(["TP","day","mode"])

if ACWmode:
    DFout["mode"] = DFout["mode"].str[1:]

if not day:
    DFout.drop("day",axis=1,inplace=True)

if not nam2:
    DFout.drop("mode",axis=1,inplace=True)    

DFout.reset_index(drop=True,inplace=True)
DFout.index = DFout.index + 1


DFout2 = DFout


TAB = tabulate.tabulate(DFout2,headers=DFout2.columns,floatfmt=".2f")
TAB = TAB.replace("nan","N/A")
print(TAB)

TABlatex = tabulate.tabulate(DFout2,
                             headers=DFout.columns,
                             floatfmt=".2f",
                             tablefmt="latex")

pout = pbig + "/" + os.path.basename(pbig) + "_latex_intro_table.txt"
F = open(pout,"w+")
F.write(TABlatex)
F.close()
print(TABlatex)
print(pout)

# PAM_BST_v401a_m21ma_d01_ITRF14_RTKLIB.csv 2 55.5 min 1440 pings
# PAM_BST_v401a_m21ma_d01_ITRF14_RTKLIB.csv 3 55.5 min 1151 pings
# PAM_BST_v401a_m21ma_d01_ITRF14_RTKLIB.csv 1 55.5 min 1250 pings
# PAM_BST_v402a_m21so_d10_ITRF14_RTKLIB.csv 1 32.1 min 710 pings
# PAM_BST_v402a_m21so_d10_ITRF14_RTKLIB.csv 2 32.1 min 870 pings
# PAM_BST_v402a_m21so_d10_ITRF14_RTKLIB.csv 3 32.1 min 818 pings
# PAM_BST_v403a_m22so_d11_ITRF14_RTKLIB.csv 2 44.6 min 2635 pings
# PAM_BST_v403a_m22so_d11_ITRF14_RTKLIB.csv 1 44.6 min 2055 pings
# PAM_BST_v403a_m22so_d11_ITRF14_RTKLIB.csv 3 44.6 min 2245 pings