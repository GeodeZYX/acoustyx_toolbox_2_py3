#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Oct 25 14:38:31 2020

@author: psakicki



!!!!!!!!!!!!!!!!!!!!!!!!!!!! DISCONTINUED !!!!!!!!!!!!!!!!!!!!!!!!!!!!




"""

#### Import star style
from geodezyx import *                   # Import the GeodeZYX modules
from geodezyx.externlib import *         # Import the external modules
from geodezyx.megalib.megalib import *   # Import the legacy modules names

p="/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/02_/PAM_BST_v221_m2507-1109_m5_d02_bea2_RGF93_RTKLIB_GPSonly/log/20201021_135322_PAM_BST_v221_m2507-1109_m5_d02_bea2_RGF93_RTKLIB_GPSonly_0.pik"
p="/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/02_/PAM_BST_v211_m2507-1158_m3_d04_bea1_RGF93_RTKLIB_GPSonly/log/20201021_213501_PAM_BST_v211_m2507-1158_m3_d04_bea1_RGF93_RTKLIB_GPSonly_0.pik"
p="/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/02_/PAM_BST_v231_m2507-1245_m4_d06_bea3_RGF93_RTKLIB_GPSonly/log/20201021_221405_PAM_BST_v231_m2507-1245_m4_d06_bea3_RGF93_RTKLIB_GPSonly_0.pik"

pbig = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/03_b_windows"
pbig = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/03_h_win_weight_range_1"
pbig = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/03_i_win_weight_range_2"

pbig = "/home/psakicki/GFZ_WORK/PROJECTS_OTHERS/2001_PAMELi_GNSSA/02_PREPROCESSING/03_j_win_weight_range_3"

Pbig = utils.find_recursive(pbig,"*log*")
Pbig = list(np.unique([os.path.dirname(e) for e in Pbig]))

DFstk = []
for plog in Pbig:
    
    P = utils.find_recursive(str(plog),"*pik")
    
    Xnew_stk = []
    for p in P:
        try:
            DictIteraStore = utils.pickle_loader(p)
        except:
            print("ERR:",str(plog))
            
        name = 'BEA' + os.path.basename(p).split("bea")[1][:-6]
        bea = int(name[3])

        
        DictLastIter = DictIteraStore[list(DictIteraStore.keys())[-1]]
        Xnew   = DictLastIter["Xnew"]
        p_twtt = DictLastIter["p_twtt"]
        p_dv   = DictLastIter["p_dir_vect"]
        
        if len(Xnew) == 3:
            Xnew = np.append(Xnew,np.nan)
            Sigma = np.append(Sigma,np.nan)
            c_esti = False
        else:
            c_esti = True

        line = [bea,np.nan,c_esti,wei_twtt,wei_dv] + list(Xnew[:]) + list(Sigma[:]) 
        Xnew_stk.append(line)
        
        
    DF = pd.DataFrame(np.vstack(Xnew_stk))
    DF = DF.drop_duplicates() 
    
    Col_names = ['BEA','NAME','C_esti','W_TWTT','W_DV','N','E','D','C','sN','sE','sD','sC']
    DF.columns =  Col_names  
    
    DF.NAME   = name[5:]
    DF.BEA    = DF.BEA.astype(int)
    DF.C_esti = DF.C_esti.astype(bool)
    
    print("******",name)
    DFgrp = DF.groupby([0,2]).std()
    DFgrp=DFgrp.sort_values(by=[0,2],ascending=[True,False])
    
    DFstk.append(DF)

DFall = pd.concat(DFstk)
    
DFallpath = utils.pickle_saver(DFall,pbig,os.path.basename(pbig)[0:4])

    

    